!function(t,e){function n(t,e,n){var i=t.children(),o=!1;t.empty();for(var r=0,a=i.length;a>r;r++){var l=i.eq(r);if(t.append(l),n&&t.append(n),s(t,e)){l.remove(),o=!0;break}n&&n.detach()}return o}function i(e,n,r,a,l){var u=!1,c="a, table, thead, tbody, tfoot, tr, col, colgroup, object, embed, param, ol, ul, dl, blockquote, select, optgroup, option, textarea, script, style",f="script, .dotdotdot-keep";return e.contents().detach().each(function(){var h=this,d=t(h);if("undefined"==typeof h)return!0;if(d.is(f))e.append(d);else{if(u)return!0;e.append(d),!l||d.is(a.after)||d.find(a.after).length||e[e.is(c)?"after":"append"](l),s(r,a)&&(u=3==h.nodeType?o(d,n,r,a,l):i(d,n,r,a,l)),u||l&&l.detach()}}),n.addClass("is-truncated"),u}function o(e,n,i,o,a){var c=e[0];if(!c)return!1;var h=u(c),d=-1!==h.indexOf(" ")?" ":"　",p="letter"==o.wrap?"":d,g=h.split(p),m=-1,y=-1,v=0,w=g.length-1;for(o.fallbackToLetter&&0==v&&0==w&&(p="",g=h.split(p),w=g.length-1);w>=v&&(0!=v||0!=w);){var S=Math.floor((v+w)/2);if(S==y)break;y=S,l(c,g.slice(0,y+1).join(p)+o.ellipsis),i.children().each(function(){t(this).toggle().toggle()}),s(i,o)?(w=y,o.fallbackToLetter&&0==v&&0==w&&(p="",g=g[0].split(p),m=-1,y=-1,v=0,w=g.length-1)):(m=y,v=y)}if(-1==m||1==g.length&&0==g[0].length){var R=e.parent();e.detach();var b=a&&a.closest(R).length?a.length:0;R.contents().length>b?c=f(R.contents().eq(-1-b),n):(c=f(R,n,!0),b||R.detach()),c&&(h=r(u(c),o),l(c,h),b&&a&&t(c).parent().append(a))}else h=r(g.slice(0,m+1).join(p),o),l(c,h);return!0}function s(t,e){return t.innerHeight()>e.maxHeight}function r(e,n){for(;t.inArray(e.slice(-1),n.lastCharacter.remove)>-1;)e=e.slice(0,-1);return t.inArray(e.slice(-1),n.lastCharacter.noEllipsis)<0&&(e+=n.ellipsis),e}function a(t){return{width:t.innerWidth(),height:t.innerHeight()}}function l(t,e){t.innerText?t.innerText=e:t.nodeValue?t.nodeValue=e:t.textContent&&(t.textContent=e)}function u(t){return t.innerText?t.innerText:t.nodeValue?t.nodeValue:t.textContent?t.textContent:""}function c(t){do t=t.previousSibling;while(t&&1!==t.nodeType&&3!==t.nodeType);return t}function f(e,n,i){var o,s=e&&e[0];if(s){if(!i){if(3===s.nodeType)return s;if(t.trim(e.text()))return f(e.contents().last(),n)}for(o=c(s);!o;){if(e=e.parent(),e.is(n)||!e.length)return!1;o=c(e[0])}if(o)return f(t(o),n)}return!1}function h(e,n){return e?"string"==typeof e?(e=t(e,n),e.length?e:!1):e.jquery?e:!1:!1}function d(t){for(var e=t.innerHeight(),n=["paddingTop","paddingBottom"],i=0,o=n.length;o>i;i++){var s=parseInt(t.css(n[i]),10);isNaN(s)&&(s=0),e-=s}return e}if(!t.fn.dotdotdot){t.fn.dotdotdot=function(e){if(0==this.length)return t.fn.dotdotdot.debug('No element found for "'+this.selector+'".'),this;if(this.length>1)return this.each(function(){t(this).dotdotdot(e)});var o=this,r=o.contents();o.data("dotdotdot")&&o.trigger("destroy.dot"),o.data("dotdotdot-style",o.attr("style")||""),o.css("word-wrap","break-word"),"nowrap"===o.css("white-space")&&o.css("white-space","normal"),o.bind_events=function(){return o.bind("update.dot",function(e,a){switch(o.removeClass("is-truncated"),e.preventDefault(),e.stopPropagation(),typeof l.height){case"number":l.maxHeight=l.height;break;case"function":l.maxHeight=l.height.call(o[0]);break;default:l.maxHeight=d(o)}l.maxHeight+=l.tolerance,"undefined"!=typeof a&&(("string"==typeof a||"nodeType"in a&&1===a.nodeType)&&(a=t("<div />").append(a).contents()),a instanceof t&&(r=a)),g=o.wrapInner('<div class="dotdotdot" />').children(),g.contents().detach().end().append(r.clone(!0)).find("br").replaceWith("  <br />  ").end().css({height:"auto",width:"auto",border:"none",padding:0,margin:0});var c=!1,f=!1;return u.afterElement&&(c=u.afterElement.clone(!0),c.show(),u.afterElement.detach()),s(g,l)&&(f="children"==l.wrap?n(g,l,c):i(g,o,g,l,c)),g.replaceWith(g.contents()),g=null,t.isFunction(l.callback)&&l.callback.call(o[0],f,r),u.isTruncated=f,f}).bind("isTruncated.dot",function(t,e){return t.preventDefault(),t.stopPropagation(),"function"==typeof e&&e.call(o[0],u.isTruncated),u.isTruncated}).bind("originalContent.dot",function(t,e){return t.preventDefault(),t.stopPropagation(),"function"==typeof e&&e.call(o[0],r),r}).bind("destroy.dot",function(t){t.preventDefault(),t.stopPropagation(),o.unwatch().unbind_events().contents().detach().end().append(r).attr("style",o.data("dotdotdot-style")||"").removeClass("is-truncated").data("dotdotdot",!1)}),o},o.unbind_events=function(){return o.unbind(".dot"),o},o.watch=function(){if(o.unwatch(),"window"==l.watch){var e=t(window),n=e.width(),i=e.height();e.bind("resize.dot"+u.dotId,function(){n==e.width()&&i==e.height()&&l.windowResizeFix||(n=e.width(),i=e.height(),f&&clearInterval(f),f=setTimeout(function(){o.trigger("update.dot")},100))})}else c=a(o),f=setInterval(function(){if(o.is(":visible")){var t=a(o);(c.width!=t.width||c.height!=t.height)&&(o.trigger("update.dot"),c=t)}},500);return o},o.unwatch=function(){return t(window).unbind("resize.dot"+u.dotId),f&&clearInterval(f),o};var l=t.extend(!0,{},t.fn.dotdotdot.defaults,e),u={},c={},f=null,g=null;return l.lastCharacter.remove instanceof Array||(l.lastCharacter.remove=t.fn.dotdotdot.defaultArrays.lastCharacter.remove),l.lastCharacter.noEllipsis instanceof Array||(l.lastCharacter.noEllipsis=t.fn.dotdotdot.defaultArrays.lastCharacter.noEllipsis),u.afterElement=h(l.after,o),u.isTruncated=!1,u.dotId=p++,o.data("dotdotdot",!0).bind_events().trigger("update.dot"),l.watch&&o.watch(),o},t.fn.dotdotdot.defaults={ellipsis:"... ",wrap:"word",fallbackToLetter:!0,lastCharacter:{},tolerance:0,callback:null,after:null,height:null,watch:!1,windowResizeFix:!0},t.fn.dotdotdot.defaultArrays={lastCharacter:{remove:[" ","　",",",";",".","!","?"],noEllipsis:[]}},t.fn.dotdotdot.debug=function(){};var p=1,g=t.fn.html;t.fn.html=function(n){return n!=e&&!t.isFunction(n)&&this.data("dotdotdot")?this.trigger("update",[n]):g.apply(this,arguments)};var m=t.fn.text;t.fn.text=function(n){return n!=e&&!t.isFunction(n)&&this.data("dotdotdot")?(n=t("<div />").text(n).html(),this.trigger("update",[n])):m.apply(this,arguments)}}}(jQuery),jQuery(document).ready(function(t){t(".dot-ellipsis").each(function(){var e=t(this).hasClass("dot-resize-update"),n=t(this).hasClass("dot-timer-update"),i=0,o=t(this).attr("class").split(/\s+/);t.each(o,function(t,e){var n=e.match(/^dot-height-(\d+)$/);null!==n&&(i=Number(n[1]))});var s=new Object;n&&(s.watch=!0),e&&(s.watch="window"),i>0&&(s.height=i),t(this).dotdotdot(s)})}),jQuery(window).load(function(){jQuery(".dot-ellipsis.dot-load-update").trigger("update.dot")}),function(){function t(t){return t.call.apply(t.bind,arguments)}function e(t,e){if(!t)throw Error();if(2<arguments.length){var n=Array.prototype.slice.call(arguments,2);return function(){var i=Array.prototype.slice.call(arguments);return Array.prototype.unshift.apply(i,n),t.apply(e,i)}}return function(){return t.apply(e,arguments)}}function n(){return n=Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?t:e,n.apply(null,arguments)}function i(t,e){this.a=t,this.m=e||t,this.c=this.m.document}function o(t,e,n,i){if(e=t.c.createElement(e),n)for(var o in n)n.hasOwnProperty(o)&&("style"==o?e.style.cssText=n[o]:e.setAttribute(o,n[o]));return i&&e.appendChild(t.c.createTextNode(i)),e}function s(t,e,n){t=t.c.getElementsByTagName(e)[0],t||(t=document.documentElement),t.insertBefore(n,t.lastChild)}function r(t){t.parentNode&&t.parentNode.removeChild(t)}function a(t,e,n){e=e||[],n=n||[];for(var i=t.className.split(/\s+/),o=0;o<e.length;o+=1){for(var s=!1,r=0;r<i.length;r+=1)if(e[o]===i[r]){s=!0;break}s||i.push(e[o])}for(e=[],o=0;o<i.length;o+=1){for(s=!1,r=0;r<n.length;r+=1)if(i[o]===n[r]){s=!0;break}s||e.push(i[o])}t.className=e.join(" ").replace(/\s+/g," ").replace(/^\s+|\s+$/,"")}function l(t,e){for(var n=t.className.split(/\s+/),i=0,o=n.length;o>i;i++)if(n[i]==e)return!0;return!1}function u(t){if("string"==typeof t.f)return t.f;var e=t.m.location.protocol;return"about:"==e&&(e=t.a.location.protocol),"https:"==e?"https:":"http:"}function c(t){return t.m.location.hostname||t.a.location.hostname}function f(t,e,n){function i(){u&&r&&a&&(u(l),u=null)}e=o(t,"link",{rel:"stylesheet",href:e,media:"all"});var r=!1,a=!0,l=null,u=n||null;ie?(e.onload=function(){r=!0,i()},e.onerror=function(){r=!0,l=Error("Stylesheet failed to load"),i()}):setTimeout(function(){r=!0,i()},0),s(t,"head",e)}function h(t,e,n,i){var s=t.c.getElementsByTagName("head")[0];if(s){var r=o(t,"script",{src:e}),a=!1;return r.onload=r.onreadystatechange=function(){a||this.readyState&&"loaded"!=this.readyState&&"complete"!=this.readyState||(a=!0,n&&n(null),r.onload=r.onreadystatechange=null,"HEAD"==r.parentNode.tagName&&s.removeChild(r))},s.appendChild(r),setTimeout(function(){a||(a=!0,n&&n(Error("Script load timeout")))},i||5e3),r}return null}function d(){this.a=0,this.c=null}function p(t){return t.a++,function(){t.a--,m(t)}}function g(t,e){t.c=e,m(t)}function m(t){0==t.a&&t.c&&(t.c(),t.c=null)}function y(t){this.a=t||"-"}function v(t,e){this.c=t,this.f=4,this.a="n";var n=(e||"n4").match(/^([nio])([1-9])$/i);n&&(this.a=n[1],this.f=parseInt(n[2],10))}function w(t){return b(t)+" "+(t.f+"00")+" 300px "+S(t.c)}function S(t){var e=[];t=t.split(/,\s*/);for(var n=0;n<t.length;n++){var i=t[n].replace(/['"]/g,"");-1!=i.indexOf(" ")||/^\d/.test(i)?e.push("'"+i+"'"):e.push(i)}return e.join(",")}function R(t){return t.a+t.f}function b(t){var e="normal";return"o"===t.a?e="oblique":"i"===t.a&&(e="italic"),e}function T(t){var e=4,n="n",i=null;return t&&((i=t.match(/(normal|oblique|italic)/i))&&i[1]&&(n=i[1].substr(0,1).toLowerCase()),(i=t.match(/([1-9]00|normal|bold)/i))&&i[1]&&(/bold/i.test(i[1])?e=7:/[1-9]00/.test(i[1])&&(e=parseInt(i[1].substr(0,1),10)))),n+e}function C(t,e){this.c=t,this.f=t.m.document.documentElement,this.h=e,this.a=new y("-"),this.j=!1!==e.events,this.g=!1!==e.classes}function x(t){t.g&&a(t.f,[t.a.c("wf","loading")]),I(t,"loading")}function _(t){if(t.g){var e=l(t.f,t.a.c("wf","active")),n=[],i=[t.a.c("wf","loading")];e||n.push(t.a.c("wf","inactive")),a(t.f,n,i)}I(t,"inactive")}function I(t,e,n){t.j&&t.h[e]&&(n?t.h[e](n.c,R(n)):t.h[e]())}function V(){this.c={}}function E(t,e,n){var i,o=[];for(i in e)if(e.hasOwnProperty(i)){var s=t.c[i];s&&o.push(s(e[i],n))}return o}function k(t,e){this.c=t,this.f=e,this.a=o(this.c,"span",{"aria-hidden":"true"},this.f)}function L(t){s(t.c,"body",t.a)}function A(t){return"display:block;position:absolute;top:-9999px;left:-9999px;font-size:300px;width:auto;height:auto;line-height:normal;margin:0;padding:0;font-variant:normal;white-space:nowrap;font-family:"+S(t.c)+";"+("font-style:"+b(t)+";font-weight:"+(t.f+"00")+";")}function O(t,e,n,i,o,s){this.g=t,this.j=e,this.a=i,this.c=n,this.f=o||3e3,this.h=s||void 0}function N(t,e,n,i,o,s,r){this.v=t,this.B=e,this.c=n,this.a=i,this.s=r||"BESbswy",this.f={},this.w=o||3e3,this.u=s||null,this.o=this.j=this.h=this.g=null,this.g=new k(this.c,this.s),this.h=new k(this.c,this.s),this.j=new k(this.c,this.s),this.o=new k(this.c,this.s),t=new v(this.a.c+",serif",R(this.a)),t=A(t),this.g.a.style.cssText=t,t=new v(this.a.c+",sans-serif",R(this.a)),t=A(t),this.h.a.style.cssText=t,t=new v("serif",R(this.a)),t=A(t),this.j.a.style.cssText=t,t=new v("sans-serif",R(this.a)),t=A(t),this.o.a.style.cssText=t,L(this.g),L(this.h),L(this.j),L(this.o)}function D(){if(null===se){var t=/AppleWebKit\/([0-9]+)(?:\.([0-9]+))/.exec(window.navigator.userAgent);se=!!t&&(536>parseInt(t[1],10)||536===parseInt(t[1],10)&&11>=parseInt(t[2],10))}return se}function j(t,e,n){for(var i in oe)if(oe.hasOwnProperty(i)&&e===t.f[oe[i]]&&n===t.f[oe[i]])return!0;return!1}function P(t){var e,n=t.g.a.offsetWidth,i=t.h.a.offsetWidth;(e=n===t.f.serif&&i===t.f["sans-serif"])||(e=D()&&j(t,n,i)),e?ne()-t.A>=t.w?D()&&j(t,n,i)&&(null===t.u||t.u.hasOwnProperty(t.a.c))?M(t,t.v):M(t,t.B):H(t):M(t,t.v)}function H(t){setTimeout(n(function(){P(this)},t),50)}function M(t,e){setTimeout(n(function(){r(this.g.a),r(this.h.a),r(this.j.a),r(this.o.a),e(this.a)},t),0)}function F(t,e,n){this.c=t,this.a=e,this.f=0,this.o=this.j=!1,this.s=n}function $(t){0==--t.f&&t.j&&(t.o?(t=t.a,t.g&&a(t.f,[t.a.c("wf","active")],[t.a.c("wf","loading"),t.a.c("wf","inactive")]),I(t,"active")):_(t.a))}function W(t){this.j=t,this.a=new V,this.h=0,this.f=this.g=!0}function z(t,e,i,o,s){var r=0==--t.h;(t.f||t.g)&&setTimeout(function(){var t=s||null,l=o||null||{};if(0===i.length&&r)_(e.a);else{e.f+=i.length,r&&(e.j=r);var u,c=[];for(u=0;u<i.length;u++){var f=i[u],h=l[f.c],d=e.a,p=f;d.g&&a(d.f,[d.a.c("wf",p.c,R(p).toString(),"loading")]),I(d,"fontloading",p),d=null,null===re&&(re=window.FontFace?(p=/Gecko.*Firefox\/(\d+)/.exec(window.navigator.userAgent))?42<parseInt(p[1],10):!0:!1),d=re?new O(n(e.g,e),n(e.h,e),e.c,f,e.s,h):new N(n(e.g,e),n(e.h,e),e.c,f,e.s,t,h),c.push(d)}for(u=0;u<c.length;u++)c[u].start()}},0)}function B(t,e,n){var i=[],o=n.timeout;x(e);var i=E(t.a,n,t.c),s=new F(t.c,e,o);for(t.h=i.length,e=0,n=i.length;n>e;e++)i[e].load(function(e,n,i){z(t,s,e,n,i)})}function G(t,e){this.c=t,this.a=e}function U(t,e,n){var i=u(t.c);return t=(t.a.api||"fast.fonts.net/jsapi").replace(/^.*http(s?):(\/\/)?/,""),i+"//"+t+"/"+e+".js"+(n?"?v="+n:"")}function q(t,e){this.c=t,this.a=e}function J(t,e,n){this.c=t?t:e+ae,this.a=[],this.f=[],this.g=n||""}function Q(t,e){for(var n=e.length,i=0;n>i;i++){var o=e[i].split(":");3==o.length&&t.f.push(o.pop());var s="";2==o.length&&""!=o[1]&&(s=":"),t.a.push(o.join(s))}}function K(t){if(0==t.a.length)throw Error("No fonts to load!");if(-1!=t.c.indexOf("kit="))return t.c;for(var e=t.a.length,n=[],i=0;e>i;i++)n.push(t.a[i].replace(/ /g,"+"));return e=t.c+"?family="+n.join("%7C"),0<t.f.length&&(e+="&subset="+t.f.join(",")),0<t.g.length&&(e+="&text="+encodeURIComponent(t.g)),e}function X(t){this.f=t,this.a=[],this.c={}}function Y(t){for(var e=t.f.length,n=0;e>n;n++){var i=t.f[n].split(":"),o=i[0].replace(/\+/g," "),s=["n4"];if(2<=i.length){var r,a=i[1];if(r=[],a)for(var a=a.split(","),l=a.length,u=0;l>u;u++){var c;if(c=a[u],c.match(/^[\w-]+$/)){var f=fe.exec(c.toLowerCase());if(null==f)c="";else{if(c=f[2],c=null==c||""==c?"n":ce[c],f=f[1],null==f||""==f)f="4";else var h=ue[f],f=h?h:isNaN(f)?"4":f.substr(0,1);c=[c,f].join("")}}else c="";c&&r.push(c)}0<r.length&&(s=r),3==i.length&&(i=i[2],r=[],i=i?i.split(","):r,0<i.length&&(i=le[i[0]])&&(t.c[o]=i))}for(t.c[o]||(i=le[o])&&(t.c[o]=i),i=0;i<s.length;i+=1)t.a.push(new v(o,s[i]))}}function Z(t,e){this.c=t,this.a=e}function te(t,e){this.c=t,this.a=e}function ee(t,e){this.c=t,this.f=e,this.a=[]}var ne=Date.now||function(){return+new Date},ie=!!window.FontFace;y.prototype.c=function(){for(var t=[],e=0;e<arguments.length;e++)t.push(arguments[e].replace(/[\W_]+/g,"").toLowerCase());return t.join(this.a)},O.prototype.start=function(){var t=this.c.m.document,e=this,n=ne(),i=new Promise(function(i,o){function s(){ne()-n>=e.f?o():t.fonts.load(w(e.a),e.h).then(function(t){1<=t.length?i():setTimeout(s,25)},function(){o()})}s()}),o=new Promise(function(t,n){setTimeout(n,e.f)});Promise.race([o,i]).then(function(){e.g(e.a)},function(){e.j(e.a)})};var oe={D:"serif",C:"sans-serif"},se=null;N.prototype.start=function(){this.f.serif=this.j.a.offsetWidth,this.f["sans-serif"]=this.o.a.offsetWidth,this.A=ne(),P(this)};var re=null;F.prototype.g=function(t){var e=this.a;e.g&&a(e.f,[e.a.c("wf",t.c,R(t).toString(),"active")],[e.a.c("wf",t.c,R(t).toString(),"loading"),e.a.c("wf",t.c,R(t).toString(),"inactive")]),I(e,"fontactive",t),this.o=!0,$(this)},F.prototype.h=function(t){var e=this.a;if(e.g){var n=l(e.f,e.a.c("wf",t.c,R(t).toString(),"active")),i=[],o=[e.a.c("wf",t.c,R(t).toString(),"loading")];n||i.push(e.a.c("wf",t.c,R(t).toString(),"inactive")),a(e.f,i,o)}I(e,"fontinactive",t),$(this)},W.prototype.load=function(t){this.c=new i(this.j,t.context||this.j),this.g=!1!==t.events,this.f=!1!==t.classes,B(this,new C(this.c,t),t)},G.prototype.load=function(t){function e(){if(o["__mti_fntLst"+n]){var i,s=o["__mti_fntLst"+n](),r=[];if(s)for(var a=0;a<s.length;a++){var l=s[a].fontfamily;void 0!=s[a].fontStyle&&void 0!=s[a].fontWeight?(i=s[a].fontStyle+s[a].fontWeight,r.push(new v(l,i))):r.push(new v(l))}t(r)}else setTimeout(function(){e()},50)}var n=this.a.projectId,i=this.a.version;if(n){var o=this.c.m;h(this.c,U(this,n,i),function(n){n?t([]):e()}).id="__MonotypeAPIScript__"+n}else t([])},q.prototype.load=function(t){var e,n,i=this.a.urls||[],o=this.a.families||[],s=this.a.testStrings||{},r=new d;for(e=0,n=i.length;n>e;e++)f(this.c,i[e],p(r));var a=[];for(e=0,n=o.length;n>e;e++)if(i=o[e].split(":"),i[1])for(var l=i[1].split(","),u=0;u<l.length;u+=1)a.push(new v(i[0],l[u]));else a.push(new v(i[0]));g(r,function(){t(a,s)})};var ae="//fonts.googleapis.com/css",le={latin:"BESbswy",cyrillic:"йяЖ",greek:"αβΣ",khmer:"កខគ",Hanuman:"កខគ"},ue={thin:"1",extralight:"2","extra-light":"2",ultralight:"2","ultra-light":"2",light:"3",regular:"4",book:"4",medium:"5","semi-bold":"6",semibold:"6","demi-bold":"6",demibold:"6",bold:"7","extra-bold":"8",extrabold:"8","ultra-bold":"8",ultrabold:"8",black:"9",heavy:"9",l:"3",r:"4",b:"7"},ce={i:"i",italic:"i",n:"n",normal:"n"},fe=/^(thin|(?:(?:extra|ultra)-?)?light|regular|book|medium|(?:(?:semi|demi|extra|ultra)-?)?bold|black|heavy|l|r|b|[1-9]00)?(n|i|normal|italic)?$/,he={Arimo:!0,Cousine:!0,Tinos:!0};Z.prototype.load=function(t){var e=new d,n=this.c,i=new J(this.a.api,u(n),this.a.text),o=this.a.families;Q(i,o);var s=new X(o);Y(s),f(n,K(i),p(e)),g(e,function(){t(s.a,s.c,he)})},te.prototype.load=function(t){var e=this.a.id,n=this.c.m;e?h(this.c,(this.a.api||"https://use.typekit.net")+"/"+e+".js",function(e){if(e)t([]);else if(n.Typekit&&n.Typekit.config&&n.Typekit.config.fn){e=n.Typekit.config.fn;for(var i=[],o=0;o<e.length;o+=2)for(var s=e[o],r=e[o+1],a=0;a<r.length;a++)i.push(new v(s,r[a]));try{n.Typekit.load({events:!1,classes:!1,async:!0})}catch(l){}t(i)}},2e3):t([])},ee.prototype.load=function(t){var e=this.f.id,n=this.c.m,i=this;e?(n.__webfontfontdeckmodule__||(n.__webfontfontdeckmodule__={}),n.__webfontfontdeckmodule__[e]=function(e,n){for(var o=0,s=n.fonts.length;s>o;++o){var r=n.fonts[o];i.a.push(new v(r.name,T("font-weight:"+r.weight+";font-style:"+r.style)))}t(i.a)},h(this.c,u(this.c)+(this.f.api||"//f.fontdeck.com/s/css/js/")+c(this.c)+"/"+e+".js",function(e){e&&t([])})):t([])};var de=new W(window);de.a.c.custom=function(t,e){return new q(e,t)},de.a.c.fontdeck=function(t,e){return new ee(e,t)},de.a.c.monotype=function(t,e){return new G(e,t)},de.a.c.typekit=function(t,e){return new te(e,t)},de.a.c.google=function(t,e){return new Z(e,t)};var pe={load:n(de.load,de)};"function"==typeof define&&define.amd?define(function(){return pe}):"undefined"!=typeof module&&module.exports?module.exports=pe:(window.WebFont=pe,window.WebFontConfig&&de.load(window.WebFontConfig))}(),function(t,e,n,i){"use strict";function o(e,n){this.element=e,this.page=t(e).find(".page"),this.options=t.extend({},r,n),this._defaults=r,this._name=s,this.isLoading=!0,this.draggable=null,this.tween=null,this.calculateProgress=null,this.init()}var s="autoScroll",r={by:"continuous",speed:"medium",duration:10,pause:5,click:!1,minimumMovement:3};o.prototype={init:function(){function e(){s.tween.pause(),TweenLite.killDelayedCallsTo(s.calculateProgress),TweenLite.killDelayedCallsTo(r),TweenLite.killDelayedCallsTo(a)}var n,o,s=this,r=null,a=null,l=t(this.element).outerHeight(!0),u=l,c=this.element.scrollHeight-this.element.offsetHeight;this.calculateProgress=function(){u=t(s.element).scrollTop()+l,s.tween.progress(t(s.element).scrollTop()/c).play()},this.canScroll()?("page"===this.options.by?(n="fastest"===this.options.speed?.4:"fast"===this.options.speed?.8:"medium"===this.options.speed?1.2:"slow"===this.options.speed?1.6:2,o=this.page.outerHeight(!0)/t(this.element).outerHeight(!0)*n):(n="fastest"===this.options.speed?60:"fast"===this.options.speed?50:"medium"===this.options.speed?40:"slow"===this.options.speed?30:20,o=Math.abs((this.page.outerHeight(!0)-t(this.element).outerHeight(!0))/n)),Draggable.create(this.element,{type:"scrollTop",throwProps:!0,edgeResistance:.75,minimumMovement:s.options.minimumMovement,onPress:function(){e()},onRelease:function(){"none"!==s.options.by&&TweenLite.delayedCall(s.options.pause,s.calculateProgress)},onClick:function(){s.options.click&&(e(),t(s.element).trigger("scrollClick",[this.pointerEvent]))}}),this.draggable=Draggable.get(this.element),this.tween=TweenLite.to(this.draggable.scrollProxy,o,{scrollTop:c,ease:Linear.easeNone,delay:"page"===this.options.by?this.options.duration:this.options.pause,paused:!0,onUpdate:"page"===this.options.by?function(){Math.abs(s.draggable.scrollProxy.top())>=u&&(s.tween.pause(),u+=l,TweenLite.delayedCall(s.options.duration,a=function(){s.tween.resume()}))}:i,onComplete:function(){TweenLite.delayedCall("page"===s.options.by?s.options.duration:s.options.pause,r=function(){TweenLite.to(s.page,1,{autoAlpha:0,onComplete:function(){s.tween.seek(0).pause(),"page"===s.options.by&&(u=l),t(s.element).trigger("done")}})})}}),TweenLite.set(this.element,{overflowY:"hidden"})):this.options.click&&(Draggable.create(this.element,{type:"scrollTop",throwProps:!0,edgeResistance:.95,minimumMovement:this.options.minimumMovement,onClick:function(){t(s.element).trigger("scrollClick",[this.pointerEvent])}}),this.draggable=Draggable.get(this.element))},canScroll:function(){return this.options&&this.page.height()>t(this.element).height()},destroy:function(){t(this.element).removeData(),this.tween&&this.tween.kill(),this.draggable&&this.draggable.kill(),this.element=null,this.page=null,this.options=null,this._defaults=null,this.draggable=null,this.tween=null,this.calculateProgress=null}},o.prototype.play=function(){this.canScroll()&&"none"!==this.options.by&&this.tween&&(this.isLoading?(this.tween.play(),this.isLoading=!1):(TweenLite.to(this.page,1,{autoAlpha:1}),TweenLite.delayedCall("page"===this.options.by?this.options.duration:this.options.pause,this.calculateProgress)))},o.prototype.pause=function(){this.tween&&(TweenLite.killDelayedCallsTo(this.calculateProgress),this.tween.pause())},o.prototype.stop=function(){this.tween&&(TweenLite.killDelayedCallsTo(this.calculateProgress),this.tween.kill()),this.element=null,this.page=null},t.fn.autoScroll=function(e){return this.each(function(){t.data(this,"plugin_"+s)||t.data(this,"plugin_"+s,new o(this,e))})}}(jQuery,window,document);var WIDGET_COMMON_CONFIG={AUTH_PATH_URL:"v1/widget/auth",LOGGER_CLIENT_ID:"1088527147109-6q1o2vtihn34292pjt4ckhmhck0rk0o7.apps.googleusercontent.com",LOGGER_CLIENT_SECRET:"nlZyrcPLg6oEwO9f9Wfn29Wh",LOGGER_REFRESH_TOKEN:"1/xzt4kwzE1H7W9VnKB8cAaCx6zb4Es4nKEoqaYHdTD15IgOrJDtdun6zK6XiATCKT",STORAGE_ENV:"prod",STORE_URL:"https://store-dot-rvaserver2.appspot.com/"},RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Utilities=function(){function t(t,e){var n="font-family:"+e.font.family+"; ",i="color: "+(e.color?e.color:e.forecolor)+"; ",o="font-size: "+(-1===e.size.indexOf("px")?e.size+"px; ":e.size+"; "),s="font-weight: "+(e.bold?"bold":"normal")+"; ",r="font-style: "+(e.italic?"italic":"normal")+"; ",a="text-decoration: "+(e.underline?"underline":"none")+"; ",l="background-color: "+(e.highlightColor?e.highlightColor:e.backcolor)+"; ";return"."+t+" {"+n+i+o+s+r+a+l+"}"}function e(t){for(var e=document.createElement("style"),n=0,i=t.length;i>n;n++)e.appendChild(document.createTextNode(t[n]));document.head.appendChild(e)}function n(n,s){n.forEach(function(n){n.class&&n.fontSetting&&e([t(n.class,n.fontSetting)]),n.fontSetting.font.type&&("custom"===n.fontSetting.font.type&&n.fontSetting.font.family&&n.fontSetting.font.url?i(n.fontSetting.font.family,n.fontSetting.font.url,s):"google"===n.fontSetting.font.type&&n.fontSetting.font.family&&o(n.fontSetting.font.family,s))})}function i(t,e,n){var i=null,o="font-family: "+t+"; src: url('"+e+"');";n=n||document,i=n.styleSheets[0],null!==i&&i.addRule("@font-face",o)}function o(t,e){var n,i=document.createElement("link");e=e||document,i.setAttribute("rel","stylesheet"),i.setAttribute("type","text/css"),n=t.split(",")[0],n=n.replace(/'/g,""),i.setAttribute("href","https://fonts.googleapis.com/css?family="+n),null!==i&&e.getElementsByTagName("head")[0].appendChild(i)}function s(t){for(var e=t.length,n=[],i=0;e>i;i++)n[i]=new Image,n[i].src=t[i]}function r(t){for(var e,n=window.location.search.substring(1),i=n.split("&"),o=0;o<i.length;o++)if(e=i[o].split("="),e[0]==t)return decodeURIComponent(e[1]);return""}function a(t){var e="";switch(t){case 404:e="The file does not exist or cannot be accessed.";break;case 507:e="There is not enough disk space to save the file on Rise Cache.";break;default:e="There was a problem retrieving the file from Rise Cache."}return e}function l(t){var e=document.createElement("div");return e.innerHTML=t,e.textContent}return{getQueryParameter:r,getFontCssStyle:t,addCSSRules:e,loadFonts:n,loadCustomFont:i,loadGoogleFont:o,preloadImages:s,getRiseCacheErrorMessage:a,unescapeHTML:l}}();var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Scroller=function(t){"use strict";function e(){for(var t=null,e=[],s=[],r=[],a=0;a<C.length;a++)C[a].fontStyle.font.type&&"google"===C[a].fontStyle.font.type&&(t=C[a].fontStyle.font.family.split(","),e.push(t[0]));for(a=0;a<C.length;a++)C[a].fontStyle.font.type&&"custom"===C[a].fontStyle.font.type&&(s.push(C[a].fontStyle.font.family),r.push(C[a].fontStyle.font.url));s.length>0?n(s,r,function(){e.length>0?i(e,o):o()}):e.length>0?i(e,o):o()}function n(t,e,n){WebFont.load({custom:{families:t,urls:e},active:function(){n()},inactive:function(){n()},timeout:2e3})}function i(t,e){WebFont.load({google:{families:t},active:function(){e()},inactive:function(){e()},timeout:2e3})}function o(){s(),TweenLite.ticker.addEventListener("tick",u),w.dispatchEvent(new CustomEvent("ready",{bubbles:!0}))}function s(){r(),c(),R.width=x,r(),c()}function r(){x=0;for(var t=0;t<C.length;t++)a(C[t])}function a(t){var e,n={};t&&(n.text=I.unescapeHTML(t.text),t.fontStyle&&(e=t.fontStyle,e.font&&e.font.family&&(n.font=e.font.family),e.size&&(n.size=e.size),e.forecolor&&(n.foreColor=e.forecolor),e.bold&&(n.bold=e.bold),e.italic&&(n.italic=e.italic)),l(n))}function l(t){var e="";b.save(),t.bold&&(e="bold "),t.italic&&(e+="italic "),t.size&&(e+=t.size+" "),t.font&&(e+=t.font),b.font=e,b.fillStyle=t.foreColor,b.translate(0,R.height/2),b.fillText(t.text,x,0),x+=b.measureText(t.text).width+10,b.restore()}function u(){S.clearRect(0,0,w.width,w.height),S.drawImage(R,S.xpos,0)}function c(){var t=0,e=0;if(_=x,C.length>0)for(;t<w.width;)a(C[e]),t=x-_,e=e===C.length-1?0:e+1}function f(){var e;if(t.transition&&t.transition.speed)switch(t.transition.speed){case"slow":e=100;break;case"medium":e=150;break;case"fast":e=200;break;default:e=150}return _/e}function h(){T=null,S.xpos=0,w.dispatchEvent(new CustomEvent("done",{bubbles:!0}))}function d(){R=document.createElement("canvas"),R.id="secondary",R.style.display="none",b=p(R),document.body.appendChild(R)}function p(e){var n=e.getContext("2d");return e.width=t.width,e.height=t.height,n.xpos=0,n}function g(t){C=t,w=document.getElementById("scroller"),S=p(w),d(),e()}function m(t){C=t,s()}function y(){T||(T=TweenLite.to(S,f(),{xpos:-_,ease:Linear.easeNone,onComplete:h})),T.play()}function v(){T&&T.pause()}var w=null,S=null,R=null,b=null,T=null,C=[],x=0,_=0,I=RiseVision.Common.Utilities;return{init:g,play:y,pause:v,refresh:m}};var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.LoggerUtils=function(){"use strict";function t(t,e){var i=null;t.event?(i=t,i.file_url&&(i.file_format=n(i.file_url)),i.company_id=a,i.display_id=r,e(i)):e(i)}function e(){var t=new Date,e=t.getUTCFullYear(),n=t.getUTCMonth()+1,i=t.getUTCDate();return 10>n&&(n="0"+n),10>i&&(i="0"+i),e+n+i}function n(t){var e,n=/[?#&]/;return t&&"string"==typeof t?(e=t.substr(t.lastIndexOf(".")+1),n.test(e)&&(e=e.substr(0,-1!==e.indexOf("?")?e.indexOf("?"):e.length),e=e.substr(0,-1!==e.indexOf("#")?e.indexOf("#"):e.length),e=e.substr(0,-1!==e.indexOf("&")?e.indexOf("&"):e.length)),e.toLowerCase()):null}function i(t){var n={kind:"bigquery#tableDataInsertAllRequest",skipInvalidRows:!1,ignoreUnknownValues:!1,templateSuffix:e(),rows:[{insertId:""}]},i=JSON.parse(JSON.stringify(n));return i.rows[0].insertId=Math.random().toString(36).substr(2).toUpperCase(),i.rows[0].json=JSON.parse(JSON.stringify(t)),i.rows[0].json.ts=(new Date).toISOString(),i}function o(e,n){t(n,function(t){null!==t&&RiseVision.Common.Logger.log(e,t)})}function s(t,e){a=t,r=e}var r="",a="";return{getInsertData:i,getFileFormat:n,logEvent:o,setIds:s}}(),RiseVision.Common.Logger=function(t){"use strict";function e(t){var e=new XMLHttpRequest;return new Date-u<358e4?t({}):(e.open("POST",o,!0),e.onloadend=function(){var n=JSON.parse(e.response);t({token:n.access_token,refreshedAt:new Date})},e.send(),void 0)}function n(t){return r&&l===t}function i(i,o){function f(e){var n,r,a=new XMLHttpRequest;r=s.replace("TABLE_ID",i),u=e.refreshedAt||u,c=e.token||c,n=t.getInsertData(o),a.open("POST",r,!0),a.setRequestHeader("Content-Type","application/json"),a.setRequestHeader("Authorization","Bearer "+c),o.cb&&"function"==typeof o.cb&&(a.onloadend=function(){o.cb(a.response)}),a.send(JSON.stringify(n))}if(!(!i||!o||o.hasOwnProperty("event")&&!o.event||o.hasOwnProperty("event")&&n(o.event)))return r=!0,l=o.event,setTimeout(function(){r=!1},a),e(f)}var o="https://www.googleapis.com/oauth2/v3/token?client_id="+WIDGET_COMMON_CONFIG.LOGGER_CLIENT_ID+"&client_secret="+WIDGET_COMMON_CONFIG.LOGGER_CLIENT_SECRET+"&refresh_token="+WIDGET_COMMON_CONFIG.LOGGER_REFRESH_TOKEN+"&grant_type=refresh_token",s="https://www.googleapis.com/bigquery/v2/projects/client-side-events/datasets/Widget_Events/tables/TABLE_ID/insertAll",r=!1,a=1e3,l="",u=0,c="";return{log:i}}(RiseVision.Common.LoggerUtils);var RiseVision=RiseVision||{};RiseVision.RSS={},RiseVision.RSS=function(t,e){"use strict";function n(){e.rpc.call("","rsevent_ready",null,I.getString("id"),!0,!0,!0,!0,!0)}function i(){e.rpc.call("","rsevent_done",null,I.getString("id")),null!==N&&m(N,!0),m({event:"done",feed_url:x.url},!1)}function o(){var t={event:"error",event_details:"no feed items",feed_url:x.url};m(t,!0),T("There are no items to show from this RSS feed.")}function s(){clearTimeout(O),O=null}function r(){s(),O=setTimeout(function(){i()},5e3)}function a(){V=new RiseVision.Common.Message(t.getElementById("container"),t.getElementById("messageContainer")),V.show("Please wait while your feed is loaded.")}function l(){var t=[{"class":"story_font-style",fontSetting:x.story.fontStyle}];x.headline&&!_.isEmpty(x.headline.fontStyle)&&t.push({"class":"headline_font-style",fontSetting:x.headline.fontStyle}),x.timestamp&&!_.isEmpty(x.timestamp.fontStyle)&&t.push({"class":"timestamp_font-style",fontSetting:x.timestamp.fontStyle}),x.author&&!_.isEmpty(x.author.fontStyle)&&t.push({"class":"author_font-style",fontSetting:x.author.fontStyle}),RiseVision.Common.Utilities.loadFonts(t)}function u(){E=new RiseVision.RSS.RiseRSS(x),E.init()}function c(){var t=window.location.pathname,e=t.lastIndexOf("/")+1;t=t.substr(0,e)+"layouts/","undefined"==typeof x.layout?t+="layout-4x1.html":"custom"===x.layout?t=x.layoutUrl:t+=x.layout+".html",$.get(t).done(function(t){f(t)}).fail(function(){h(t)})}function f(t){$("#container").append(t),a(),l(),u(),n()}function h(e){V=new RiseVision.Common.Message(t.getElementById("container"),t.getElementById("messageContainer")),V.show("The layout file could not be loaded."),m({event:"error",event_details:"layout not loaded",error_details:e,feed_url:x.url},!0),n()}function d(){return x.transition?"scroll"===x.transition.type&&"left"===x.transition.direction?!0:!1:!1}function p(){t.getElementById("container").style.display="none",t.getElementById("scroller").style.display="block",a(),u(),n()}function g(){return"rss_events"}function m(t,e){e&&(N=t),RiseVision.Common.LoggerUtils.logEvent(g(),t)}function y(){i()
}function v(t){k=new RiseVision.RSS.Content(I,x),t.items&&t.items.length>0?(V.hide(),L=_.clone(t),k.init(L),A||k.play()):o()}function w(t){var e=!1;if(t.items&&0!==t.items.length)if(L&&t.items.length===L.items.length){for(var n=0;n<L.items.length;n+=1)if(!_.isEqual(t.items[n],L.items[n])){e=!0;break}}else e=!0;else o();e&&(L=_.clone(t),D?(k||(k=new RiseVision.RSS.Content(I,x)),V.hide(),k.init(L),D=!1,N=null):k.update(t))}function S(){return A=!0,D?(s(),void 0):(k&&k.pause(),void 0)}function R(){return A=!1,m({event:"play",feed_url:x.url},!1),D?(r(),void 0):(k&&k.play(),void 0)}function b(n){x=JSON.parse(JSON.stringify(n)),I=new e.Prefs,x.width=I.getInt("rsW"),x.height=I.getInt("rsH"),t.getElementById("container").style.width=x.width+"px",t.getElementById("container").style.height=x.height+"px",d()?p():c()}function T(t){D=!0,k.reset(),L=null,V.show(t),A||r()}function C(){S()}var x=null,I=new e.Prefs,V=null,E=null,k=null,L=null,A=!0,O=null,N=null,D=!1;return{getTableName:g,logEvent:m,onContentDone:y,onRiseRSSInit:v,onRiseRSSRefresh:w,pause:S,play:R,setAdditionalParams:b,showError:T,stop:C}}(document,gadgets);var RiseVision=RiseVision||{};RiseVision.RSS=RiseVision.RSS||{},RiseVision.RSS.Utils=function(){"use strict";function t(t){var e,n,i=document.createElement("div");for(i.innerHTML=t,e=i.getElementsByTagName("script"),n=e.length;n--;)e[n].parentNode.removeChild(e[n]);return i.innerHTML}function e(t,e){var n=e?e:120;return t.length>n&&(t=t.substring(0,n),t=t.replace(/\w+$/,""),t+=" ..."),t}return{stripScripts:t,truncate:e}}();var RiseVision=RiseVision||{};RiseVision.RSS=RiseVision.RSS||{},RiseVision.RSS.Images={},RiseVision.RSS.Images=function(){"use strict";function t(t){a.push(t),r+=1,r===s.length&&l&&"function"==typeof l&&l()}function e(e){var n=new Image;n.onload=function(){t(this)},n.onerror=function(){t(this)},n.src=e}function n(){var n;for(n=0;n<s.length;n+=1)null===s[n]?t(null):e(s[n])}function i(t,e){t.length>0?(s=t,a=[],r=0,e&&(l=e),n()):e&&"function"==typeof e&&e()}function o(){return a}var s=[],r=0,a=[],l=null;return{getImages:o,load:i}}();var RiseVision=RiseVision||{};RiseVision.RSS=RiseVision.RSS||{},RiseVision.RSS.RiseRSS=function(t){"use strict";function e(){var e=document.querySelector("rise-rss");e.addEventListener("rise-rss-response",function(t){t.detail&&t.detail.feed&&(n?(n=!1,RiseVision.RSS.onRiseRSSInit(t.detail.feed)):RiseVision.RSS.onRiseRSSRefresh(t.detail.feed))}),e.addEventListener("rise-rss-error",function(e){var n="";e.detail&&"string"==typeof e.detail?n=e.detail:e.detail&&Array.isArray(e.detail)&&e.detail.length>0&&(n=e.detail[0]);var i={event:"error",event_details:"rise rss error",error_details:n,feed_url:t.url};RiseVision.RSS.logEvent(i,!0),RiseVision.RSS.showError("Sorry, there was a problem with the RSS feed.",!0)}),e.setAttribute("url",t.url),t.itemsInQueue&&e.setAttribute("entries",t.itemsInQueue),e.go()}var n=!0;return{init:e}};var RiseVision=RiseVision||{};RiseVision.RSS=RiseVision.RSS||{},RiseVision.RSS.TransitionNoScroll=function(t,e){"use strict";function n(e){var n={};return e+t.itemsToShow>=g.length-1?(n.itemsToShow=g.length-(e+1),n.currentItemIndex=g.length-1):(n.itemsToShow=t.itemsToShow,n.currentItemIndex=e+t.itemsToShow),n}function i(){var e={};return g.length<=t.itemsToShow?(e.itemsToShow=g.length,e.currentItemIndex=g.length-1):(e.itemsToShow=t.itemsToShow,e.currentItemIndex=t.itemsToShow-1),e}function o(t){$(".page").empty(),t&&"function"==typeof t&&t()}function s(e){"fade"===t.transition.type?($(".item").one("transitionend",function(){o(e)}),$(".item").addClass("fade-out").removeClass("fade-in")):o(e)}function r(n){e.showItem(n),"fade"===t.transition.type&&$(".item").addClass("fade-in"),$(".item").removeClass("hide")}function a(){var t,o=i(),a=n(m);return m===g.length-1?(u(),s(function(){for(var t=0;t<o.itemsToShow;t+=1)r(t);m=o.currentItemIndex,RiseVision.RSS.onContentDone()}),v=!1,void 0):(v?(v=!1,e.loadImages(function(){s(function(){for(var t=0;t<o.itemsToShow;t+=1)r(t);m=o.currentItemIndex})})):(t=m+1,m=a.currentItemIndex,s(function(){for(var e=t;e<t+a.itemsToShow;e+=1)r(e)})),void 0)}function l(){var e=t.transition.duration/1e3>=1?t.transition.duration:1e3*t.transition.duration;null===y&&(y=setInterval(function(){a()},e))}function u(){clearInterval(y),y=null}function c(t){var e;g=t,e=i(),m=e.currentItemIndex;for(var n=0;n<e.itemsToShow;n+=1)r(n);w&&(w=!1,h())}function f(){s(),w=!1,v=!1,g=[]}function h(){g.length>0?l():w=!0}function d(){w=!1,u()}function p(t){g=t,v=!0}var g=[],m=0,y=null,v=!1,w=!1;return{init:c,reset:f,start:h,stop:d,update:p}};var RiseVision=RiseVision||{};RiseVision.RSS=RiseVision.RSS||{},RiseVision.RSS.TransitionVerticalScroll=function(t,e){"use strict";function n(){$(".page").empty()}function i(){var t=$("#container");return"undefined"!=typeof t.data("plugin_autoScroll")?t.data("plugin_autoScroll"):null}function o(){var t=i();t&&(t.destroy(),$(".page").css("visibility","inherit"),$(".page").css("opacity","1"))}function s(){for(var t=0;t<p.length;t+=1)e.showItem(t);$(".item").removeClass("hide")}function r(){var e=1e3*t.transition.pud;y||(y=setTimeout(function(){y=null,a()},e))}function a(){g?(g=!1,o(),e.loadImages(function(){n(),s(),l(),RiseVision.RSS.onContentDone()})):RiseVision.RSS.onContentDone()}function l(){var e=$("#container");e.autoScroll({by:"scroll"===t.transition.type?"continuous":"page",speed:t.transition.speed,pause:t.transition.resume}).on("done",function(){a()})}function u(t){p=t,s(),l(),m&&(m=!1,f())}function c(){o(),n(),m=!1,p=[]}function f(){var t=i();p.length>0?t&&t.canScroll()?t.play():r():m=!0}function h(){var t=i();m=!1,t&&t.canScroll()&&t.pause(),y&&(clearTimeout(y),y=null)}function d(t){p=t,g=!0}var p=[],g=!1,m=!1,y=null;return{init:u,reset:c,start:f,stop:h,update:d}};var RiseVision=RiseVision||{};RiseVision.RSS=RiseVision.RSS||{},RiseVision.RSS.HorizontalScroll=function(t,e){"use strict";function n(){var e=document.querySelector("#scroller");g=new RiseVision.Common.Scroller(t),e.addEventListener("ready",o),e.addEventListener("done",s),g.init(i())}function i(){for(var n="",i="",o="",s="",r=null,a=[],l=0;l<f.length;l++)n=e.getTitle(f[l]),i=e.getAuthor(f[l]),o=e.getDate(f[l]),s=e.getStory(f[l]),n&&("undefined"==typeof t.dataSelection.showTitle||t.dataSelection.showTitle)&&(r={},r.text=n,r.fontStyle=t.headline.fontStyle,a.push(r)),i&&("undefined"==typeof t.dataSelection.showAuthor||t.dataSelection.showAuthor)&&(r={},r.text=i,r.fontStyle=t.author.fontStyle,a.push(r)),o&&("undefined"==typeof t.dataSelection.showTimestamp||t.dataSelection.showTimestamp)&&(r={},r.text=o,r.fontStyle=t.timestamp.fontStyle,a.push(r)),s&&(r={},r.text=s,r.fontStyle=t.story.fontStyle,a.push(r));return a}function o(){p=!0,l()}function s(){h&&(h=!1,g.refresh(i())),RiseVision.RSS.onContentDone()}function r(t){f=t,n(),d&&(d=!1,l())}function a(){d=!1,f=[]}function l(){g&&p&&f.length>0?g.play():d=!0}function u(){d=!1,g&&g.pause()}function c(t){f=t,h=!0}var f=[],h=!1,d=!1,p=!1,g=null;return{init:r,reset:a,start:l,stop:u,update:c}};var RiseVision=RiseVision||{};RiseVision.RSS=RiseVision.RSS||{},RiseVision.RSS.Content=function(t,e){"use strict";function n(){var t=R.length<=e.itemsToShow?R.length:e.itemsToShow;return e.separator&&e.separator.show?e.height/t-e.separator.size:e.height/t}function i(t){var e=null;return _.has(t,"enclosures")&&t.enclosures[0]?_.contains(x,t.enclosures[0].type)&&(e=t.enclosures[0].url):t.image&&t.image.url&&(e=t.image.url),e}function o(t){var e=null;return _.has(t,"enclosures")&&t.enclosures[0]&&_.contains(I,t.enclosures[0].type)&&(e=t.enclosures[0]),e}function s(){for(var t=[],e=0;e<R.length;e+=1)t.push(i(R[e]));return t}function r(t,n){var i,o,s,r=null,a=parseInt(t.css("margin-left"),10)+parseInt(t.css("margin-right"),10),l=parseInt(t.css("margin-top"),10)+parseInt(t.css("margin-bottom"),10);switch(e.layout){case"layout-4x1":r={},r.width=.33*e.width,r.height=e.height/e.itemsToShow-l;break;case"layout-2x1":r={},r.width=0===$(n).find(".story").length?e.width-a:.5*e.width,r.height=e.height/e.itemsToShow-$(n).find(".textWrapper").outerHeight(!0)-l;break;case"layout-16x9":r={},r.width=e.width-a,r.height=e.height/e.itemsToShow-l;break;case"layout-1x2":r={},r.width=e.width-a,r.height=(e.height/e.itemsToShow-l)/2}return r&&(i=r.width/parseInt(t.width()),o=r.height/parseInt(t.height()),s=o>i?i:o,r.width=parseInt(parseInt(t.width())*s),r.height=parseInt(parseInt(t.height())*s)),r}function a(t,n){var s,r,a,l=p(t),u=d(t),c=f(t),g=i(t),m=o(t),y=h(t),v=document.querySelector("#layout").content,w=$(v.cloneNode(!0));!t.title||"undefined"!=typeof e.dataSelection.showTitle&&!e.dataSelection.showTitle?w.find(".headline").remove():(w.find(".headline").css("textAlign",e.headline.fontStyle.align),w.find(".headline a").text(l));var S=!1;return!y||"undefined"!=typeof e.dataSelection.showTimestamp&&!e.dataSelection.showTimestamp?(S=!0,w.find(".timestamp").remove()):(e.timestamp&&w.find(".timestamp").css("textAlign",e.timestamp.fontStyle.align),w.find(".timestamp").text(y)),!c||"undefined"!=typeof e.dataSelection.showAuthor&&!e.dataSelection.showAuthor?(S=!0,w.find(".author").remove()):(e.author&&w.find(".author").css("textAlign",e.author.fontStyle.align),w.find(".author").text(c)),S&&w.find(".separator").remove(),!g||"undefined"!=typeof e.dataSelection.showImage&&!e.dataSelection.showImage?w.find(".image").remove():(a=T.getImages()[n],a&&w.find(".image").attr("src",g)),!m||"undefined"!=typeof e.dataSelection.showImage&&!e.dataSelection.showImage?w.find(".video").remove():(w.find(".video").append($("<source>").attr({src:m.url,type:m.type})),w.find(".video").play()),u?(s=w.find(".story"),s.css("textAlign",e.story.fontStyle.align),s.html(u),s.find("p").addClass("story_font-style"),s.find("div").addClass("story_font-style"),s.find("span").addClass("story_font-style")):w.remove(".story"),r=$(document.importNode(w[0],!0))}function l(){$(".item").each(function(){var t=$(this).find(".image"),e=null;t&&(e=r(t,this),e&&(t.width(e.width),t.height(e.height)))})}function u(t){$(".page").append(a(R[t],t)),l(),e.separator&&e.separator.show&&$(".item").css("border-bottom","solid "+e.separator.size+"px "+e.separator.color),$(".item").height(n()),"layout-16x9"!==e.layout&&$(".item").dotdotdot({height:n()})}function c(t){R=t.items,C||(e.transition||(e.transition={type:"none",duration:10,direction:"up"}),"none"===e.transition.type||"fade"===e.transition.type?C=new RiseVision.RSS.TransitionNoScroll(e,this):"scroll"===e.transition.type?"up"===e.transition.direction?C=new RiseVision.RSS.TransitionVerticalScroll(e,this):"left"===e.transition.direction&&(C=new RiseVision.RSS.HorizontalScroll(e,this)):"page"===e.transition.type&&(C=new RiseVision.RSS.TransitionVerticalScroll(e,this))),g(function(){C.init(R)})}function f(t){var e=null;return t.author?e=t.author:_.has(t,"dc:creator")&&(e=t["dc:creator"]["#"]),e}function h(t){var e=t.date,n=null;if(e){e=new Date(e);var i={year:"numeric",month:"long",day:"numeric"};n=e.toLocaleDateString("en-us",i)}return n}function d(t){var n=null;return _.has(t,"description")&&(n=b.stripScripts(t.description)),"snippet"===e.dataSelection.showDescription&&(n=b.truncate($("<div/>").html(n).text(),e.dataSelection.snippetLength)),n}function p(t){var e=null;return t.title&&(e=b.stripScripts(t.title)),e}function g(t){T.load(s(),function(){t&&"function"==typeof t&&t()})}function m(){C&&C.stop()}function y(){C&&C.start()}function v(){C&&(C.stop(),C.reset()),R=[]}function w(t){u(t)}function S(t){R=t.items,C&&C.update(R)}var R=[],b=RiseVision.RSS.Utils,T=RiseVision.RSS.Images,C=null,x=["image/bmp","image/gif","image/jpeg","image/jpg","image/png","image/tiff"],I=["video/mp4","video/webm","video/ogg"];return{init:c,getAuthor:f,getDate:h,getStory:d,getTitle:p,loadImages:g,pause:m,play:y,reset:v,showItem:w,update:S}};var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Message=function(t,e){"use strict";function n(){try{e.style.height=t.style.height}catch(n){console.warn("Can't initialize Message - ",n.message)}}function i(){if(s){for(;e.firstChild;)e.removeChild(e.firstChild);e.style.display="none",t.style.visibility="visible",s=!1}}function o(n){var i,o=document.createDocumentFragment();s?(i=e.querySelector(".message"),i.innerHTML=n):(t.style.visibility="hidden",e.style.display="block",i=document.createElement("p"),i.innerHTML=n,i.setAttribute("class","message"),o.appendChild(i),e.appendChild(o),s=!0)}var s=!1;return n(),{hide:i,show:o}},function(t,e,n){"use strict";function i(t,e){var n,i="",o="";Array.isArray(t)&&t.length>0&&Array.isArray(e)&&e.length>0&&("companyId"===t[0]&&(i=e[0]),"displayId"===t[1]&&(o=e[1]?e[1]:"preview"),RiseVision.Common.LoggerUtils.setIds(i,o),"additionalParams"===t[2]&&(n=JSON.parse(e[2]),RiseVision.RSS.setAdditionalParams(n)))}function o(){RiseVision.RSS.play()}function s(){RiseVision.RSS.pause()}function r(){RiseVision.RSS.stop()}function a(){t.removeEventListener("WebComponentsReady",a),u&&""!==u&&(n.rpc.register("rscmd_play_"+u,o),n.rpc.register("rscmd_pause_"+u,s),n.rpc.register("rscmd_stop_"+u,r),n.rpc.register("rsparam_set_"+u,i),n.rpc.call("","rsparam_get",null,u,["companyId","displayId","additionalParams"]))}var l=new n.Prefs,u=l.getString("id");t.oncontextmenu=function(){return!1},e.body.onmousedown=function(){return!1},t.addEventListener("WebComponentsReady",a)}(window,document,gadgets);
//# sourceMappingURL=data:application/json;base64,
